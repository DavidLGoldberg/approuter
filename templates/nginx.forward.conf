worker_processes  1;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    gzip  on;

    server {
        listen       8080;
        access_log /Users/iangroff/Development/glg/approuter/build_output/var/logs/access.log;
        error_log /Users/iangroff/Development/glg/approuter/build_output/var/logs/error.log;

        location / {
            set $my_log /Users/iangroff/Development/glg/approuter/build_output/var/logs/my.log;
            set $body_log /Users/iangroff/Development/glg/approuter/build_output/var/logs/body.log;
            resolver 8.8.8.8;
            proxy_set_header Accept-Encoding 'identity';
            proxy_set_header Host $host;
            proxy_pass http://$http_host$request_uri$is_args$args;

            log_by_lua '
              local log = io.open(ngx.var.my_log, "a")
              log:write(ngx.var.http_host.."\\n")
              log:close()
            ';
            header_filter_by_lua '
              ngx.header.content_length = nil
              ngx.header.x_filtered_by_lua = "true"
            ';

            body_filter_by_lua '
              local newstr, n = ngx.re.gsub(ngx.arg[1], "Hello", "Howdy")
              local body = string.gsub(ngx.arg[1], "</html>", "<!-- rep mom --></html>")
              local log = io.open(ngx.var.body_log, "a")
              log:write("body chunk"..ngx.var.http_host..ngx.var.uri..ngx.var.request_method.."\\n")
              log:write("content type: "..ngx.var.sent_http_content_type.."\\n")
              log:write("!-----"..newstr.."-----!\\n")
              log:close()
              ngx.arg[1] = newstr
            ';
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}
