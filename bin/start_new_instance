#! /usr/bin/env bash
MY_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
if [ -z "${ENVIRONMENT_SOURCED}" ]; then
  source ${MY_DIR}/environment
fi
START_NEW_INSTANCE_HERE=${1?You must provide a directory to start the instance in}
REPO_URL=${2?You must provide a repository url for the instance}

log "starting new instance(s) in ${START_NEW_INSTANCE_HERE}"

silent_pushd ${START_NEW_INSTANCE_HERE}
NEW_INSTANCE_NAME=`clone_repo ${REPO_URL}`
NEW_INSTANCE_PATH=${START_NEW_INSTANCE_HERE}/${NEW_INSTANCE_NAME}
# run the installation script
silent_pushd ${NEW_INSTANCE_PATH}
if [ -x ./ar-install ]; then
  log "Running instance install script for: ${NEW_INSTANCE_NAME}"
  ./ar-install >&2
fi

# now that it's installed we'll make the control scripts
NEW_INSTANCE_PORTS=$(make_control_scripts ${NEW_INSTANCE_PATH} ${NUM_INSTANCES})
bail_on_error ${NEW_INSTANCE_PORTS}

if [ -f ${HC_CONF} ]; then
  HEALTH_CHECK_PATH=`cat ${HC_CONF}`
fi
# have perp look for, and start, our new instances
perphup
rm -f ${START_NEW_INSTANCE_HERE}/active
ln -fs ${NEW_INSTANCE_PATH} ${START_NEW_INSTANCE_HERE}/active
for port in $NEW_INSTANCE_PORTS
do
  log "starting instance on port ${port}"
  HC_URL="http://localhost:${port}${HEALTH_CHECK_PATH}"
  log "checking instance health at: ${HC_URL}"
  #   wait for the instance to serve healthy, perp will have started it for us
  ${APPROUTER_BIN_DIR}/http_ready ${HC_URL}
  #   if it doesn't come up normally.... log something and move on, we can only
  #   do so much and there may be something we're unaware of
  READY_RESULT=$?
  if [ ${READY_RESULT} -ne 0 ]; then
    log "failed waiting for http ready ${READY_RESULT}"
  fi
done
silent_popd
silent_popd
${MY_DIR}/gen_crontab
${MY_DIR}/schedule_jobs ${NEW_INSTANCE_PATH}
${MY_DIR}/install_crontab
echo ${NEW_INSTANCE_PATH}
