#! /usr/bin/env bash
MY_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
if [ -z "${ENVIRONMENT_SOURCED}" ]; then
  source ${MY_DIR}/environment
fi
START_NEW_INSTANCE_HERE=${1?You must provide a directory to start the instance in}
REPO_URL=${2?You must provide a repository url for the instance}
HEALTH_CHECK_FAILURES=""

log "starting new instance(s) in ${START_NEW_INSTANCE_HERE}"

silent_pushd ${START_NEW_INSTANCE_HERE}
NEW_INSTANCE_NAME=`clone_repo ${REPO_URL}`
NEW_INSTANCE_PATH=${START_NEW_INSTANCE_HERE}/${NEW_INSTANCE_NAME}
# run the installation script
silent_pushd ${NEW_INSTANCE_PATH}
if [ -x ./ar-install ]; then
  log "Running instance install script for: ${NEW_INSTANCE_NAME}"
  ./ar-install >&2
fi

# if we have anything to overlay we'll do it now
if [ -d "${APPLICATION_OVERLAY}" ]; then
  log "applying application overlay..."
  cp -R "${APPLICATION_OVERLAY}"/* .
fi

# now that it's installed we'll make the control scripts
NEW_INSTANCE_PORTS=$(make_control_scripts ${NEW_INSTANCE_PATH} ${NUM_INSTANCES})
bail_on_error ${NEW_INSTANCE_PORTS}

# have perp look for, and start, our new instances
perphup
rm -f ${START_NEW_INSTANCE_HERE}/active
ln -fs ${NEW_INSTANCE_PATH} ${START_NEW_INSTANCE_HERE}/active
for port in $NEW_INSTANCE_PORTS
do
  log "starting instance on port ${port}"
  # allow for an instance to specify it's own health check path info by the
  # inclusion of a file named 'ar-health.conf' in the root of the repository
  if [ -e "${NEW_INSTANCE_PATH}/ar-health.conf" ]; then
    HEALTH_CHECK_PATH=`cat "${NEW_INSTANCE_PATH}/ar-health.conf"`
  fi
  if [ -z "${HEALTH_CHECK_PATH}" ]; then
    log "no health check configured, starting without verifying health"
  else
    HC_URL="http://localhost:${port}${HEALTH_CHECK_PATH}"
    log "checking instance health at: ${HC_URL}"
    #   wait for the instance to serve healthy, perp will have started it for us
    ${APPROUTER_BIN_DIR}/http_ready ${HC_URL}
    #   if it doesn't come up normally.... log something and move on, we can only
    #   do so much and there may be something we're unaware of
    READY_RESULT=$?
    if [ ${READY_RESULT} -ne 0 ]; then
      log "failed waiting for http ready ${READY_RESULT} on ${HC_URL}"
      HEALTH_CHECK_FAILURES=True
    fi
  fi
done

silent_popd  # NEW_INSTANCE_PATH
silent_popd  # START_NEW_INSTANCE_HERE

if [ -z "${HEALTH_CHECK_FAILURES}" ]; then
  # if we had no health check failures noted, we'll just return the new instance
  # that we started
  echo ${NEW_INSTANCE_PATH}
else
  # we've had a health check failure of some kind
  if [ -n "${IGNORE_HC_ERRORS}" ];
    # we've been told to ignore health check errors so we'll return our 
    # new instances that we've started but have failed health check
    echo ${NEW_INSTANCE_PATH}
  else
    # health check failure, notify our caller
    echo ${HEALTH_CHECK_FAILURES}
    exit 110
  fi  
fi
