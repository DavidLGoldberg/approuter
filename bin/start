#! /usr/bin/env bash
# vim: set ft=shell

MY_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
if [ -z "${ENVIRONMENT_SOURCED}" ]; then
  source ${MY_DIR}/environment
fi
if [ $# == 0 -a -f ${CONF_ROOT}/latest ]; then
  echo "using saved configuration"
  source ${CONF_ROOT}/latest
else
  REPO_URL=${1?You must provide a git repository URL}
  STARTING=${2?You must provide a port to listen on} 
  NUM_INSTANCES=${3?You must provide a number of instances to prefork}
fi

# save our settings for use in the future
echo "export REPO_URL=${REPO_URL}" > ${CONF_ROOT}/latest
echo "export STARTING_PORT=${STARTING_PORT}" >> ${CONF_ROOT}/latest
echo "export NUM_INSTANCES=${NUM_INSTANCES}" >> ${CONF_ROOT}/latest

# always start clean
rm -rf ${GENERATED_CONF_DIR}/*
rm -rf ${INSTANCE_GROUP_ROOT}/*
rm -rf ${PERP_BASE}/*
rm -f ${VAR_DIR}/run_data
rm -rf ${RUNTIME_BIN_DIR}/*

# generate our logrotate conf and crontab entry
sed -e s[{{log_dir}}[${LOG_DIR}[g ${LOGROTATE_CONF_TEMPLATE} > ${LOGROTATE_CONF}
echo "0 * * * *   source ${ROOT}/environment && logrotate --state ${VAR_DIR}/logrotate.state ${LOGROTATE_CONF}" > ${VAR_DIR}/crontab
echo "* * * * * cd ${ROOT} && source ./environment && ${MY_DIR}/update_active_instance >> ${LOG_DIR}/update_prod.log 2>&1" >> ${VAR_DIR}/crontab

chmod -R +x ${RUNTIME_BIN_DIR}
perpd ${PERP_BASE} > ${LOG_DIR}/perpd.log 2>&1 &
if [ -z "${NO_CRONTAB_INSTALL}" ]; then
  echo "installing crontab, just so you know..."
  #crontab ${VAR_DIR}/crontab
fi

INSTANCE_PATH=`start_new_instance ${INSTANCE_GROUP_ROOT} ${REPO_URL}`

log "New instance started at: ${INSTANCE_PATH}"
${MY_DIR}/make_nginx_control_files
# generate nginx config for new instance group
NEW_NGINX_CONFIG=`gen_nginx_config ${INSTANCE_PATH}`
echo 
echo ${NEW_NGINX_CONFIG}
echo
switch_nginx_config ${NEW_NGINX_CONFIG}

# make sure we update perp about nginx
perphup
