#! /usr/bin/env bash

function set_instance_name_from_dir(){
  INSTANCE_DIR=$1
  INSTANCE_NAME=`basename $1`
}

function set_instance_start_control_file_path(){
  INSTANCE_PATH=$1
  START_CTL_FILE=${RUNTIME_BIN_DIR}/start_${INSTANCE_NAME}
  # this is the name of a helper file that can be called and will
  # block until the requested instance is running, or will timeout 
  # after some defined interval
  WAIT_FOR_START_FILE=${RUNTIME_BIN_DIR}/wait_for_${INSTANCE_NAME}
}

function set_instance_stop_control_file_path(){
  INSTANCE_PATH=$1
  STOP_CTL_FILE=${RUNTIME_BIN_DIR}/stop_${INSTANCE_NAME}
}

function set_directory_branch_name(){
  DIR_BRANCH_NAME=`git rev-parse --symbolic-full-name --abbrev-ref HEAD`
}

ROOT=`pwd`
MANAGED_ROOT=`pwd`/managed
APPROUTER_BIN_DIR=${ROOT}/bin
BUILD_ROOT=${ROOT}/build_output
CONF_ROOT=${ROOT}/etc
PROD_BRANCH_CONF=${CONF_ROOT}/prod_branch
HEALTH_CHECK_URL_CONF=${CONF_ROOT}/health_check
ALTERNATES_ROOT=${MANAGED_ROOT}/alternates
ALTERNATES_CONF=${CONF_ROOT}/alternates.conf
ALTERNATE_ROUTE_COOKIE_PREFIX=arcp
PROD_ROOT=${MANAGED_ROOT}/prod
VAR_DIR=${MANAGED_ROOT}/var
ENV_SETTINGS_REPO_DIR=${MANAGED_ROOT}/env-settings
NGINX_CACHE_DIR=${VAR_DIR}/cache/nginx
LOG_DIR=${VAR_DIR}/log
RUN_DIR=${VAR_DIR}/run
TEMP_DIR=${VAR_DIR}/temp
PERP_BASE=${MANAGED_ROOT}/etc/perp
RUNTIME_BIN_DIR=${VAR_DIR}/bin
RUN_DATA_FILE=${VAR_DIR}/run_data
REPO_CONF=${CONF_ROOT}/repo.conf
ENV_SETTINGS_REPO_CONF=${CONF_ROOT}/env_repo.conf
GENERATED_CONF_DIR=${VAR_DIR}/conf
LOGROTATE_CONF_TEMPLATE=${ROOT}/templates/logrotate.conf
LOGROTATE_CONF=${GENERATED_CONF_DIR}/logrotate.conf
TEMPLATE_DIR=${ROOT}/templates
PROD_INSTANCE_COUNT=1

NGINX_PIDFILE=${RUN_DIR}/nginx.pid
NGINX_CONF_ROOT=${GENERATED_CONF_DIR}/nginx
NGINX_CONF_LINK=${GENERATED_CONF_DIR}/nginx/nginx.conf
NGINX_ACTIVE_CONFIG=`readlink ${NGINX_CONF_LINK}`
NGINX_CONF_FILE_1=${GENERATED_CONF_DIR}/nginx/nginx.1.conf
NGINX_CONF_FILE_2=${GENERATED_CONF_DIR}/nginx/nginx.2.conf
NGINX_PORT=9090
# we roll between 2 production instances so we have
# one config for each
NGINX_CONF_TEMPLATE_1=${ROOT}/templates/nginx.1.conf
NGINX_CONF_TEMPLATE_2=${ROOT}/templates/nginx.2.conf
# set our passive (inactive) config for our production 
# instance.  this implies the passive and active instaces
# so we'll set them here as well.  I'm deliberately going
# to test and set each case so if something goes wonky
# we get nothing set at all and fail in a big way
if [ "${NGINX_ACTIVE_CONFIG}" = "${NGINX_CONF_FILE_1}" ]; then
  NGINX_PASSIVE_CONFIG=${NGINX_CONF_FILE_2}
  ACTIVE_PROD_INSTANCE=${PROD_ROOT}/instance1
  PASSIVE_PROD_INSTANCE=${PROD_ROOT}/instance2
  ACTIVE_PROD_INSTANCE_ID=instance1
  PASSIVE_PROD_INSTANCE_ID=instance2
  ACTIVE_PROD_INSTANCE_HC_URL="http://localhost:9051`cat ${HEALTH_CHECK_URL_CONF}`"
  PASSIVE_PROD_INSTANCE_HC_URL="http://localhost:9052`cat ${HEALTH_CHECK_URL_CONF}`"
fi
if [ "${NGINX_ACTIVE_CONFIG}" = "${NGINX_CONF_FILE_2}" ]; then
  NGINX_PASSIVE_CONFIG=${NGINX_CONF_FILE_1}
  ACTIVE_PROD_INSTANCE=${PROD_ROOT}/instance2
  PASSIVE_PROD_INSTANCE=${PROD_ROOT}/instance1
  ACTIVE_PROD_INSTANCE_ID=instance2
  PASSIVE_PROD_INSTANCE_ID=instance1
  ACTIVE_PROD_INSTANCE_HC_URL="http://localhost:9052`cat ${HEALTH_CHECK_URL_CONF}`"
  PASSIVE_PROD_INSTANCE_HC_URL="http://localhost:9051`cat ${HEALTH_CHECK_URL_CONF}`"
fi
# in the case of the active config not being set we want
# to make sure and not attempt to set things
if [ "${NGINX_ACTIVE_CONFIG}x" != "x" ]; then
  set_instance_name_from_dir ${ACTIVE_PROD_INSTANCE}
  set_instance_start_control_file_path ${ACTIVE_PROD_INSTANCE}
  ACTIVE_PROD_INSTANCE_START_CTL_FILE=${START_CTL_FILE}
  set_instance_stop_control_file_path ${ACTIVE_PROD_INSTANCE}
  ACTIVE_PROD_INSTANCE_STOP_CTL_FILE=${STOP_CTL_FILE}

  set_instance_name_from_dir ${PASSIVE_PROD_INSTANCE}
  set_instance_start_control_file_path ${PASSIVE_PROD_INSTANCE}
  PASSIVE_PROD_INSTANCE_START_CTL_FILE=${START_CTL_FILE}
  set_instance_stop_control_file_path ${PASSIVE_PROD_INSTANCE}
  PASSIVE_PROD_INSTANCE_STOP_CTL_FILE=${STOP_CTL_FILE}
fi

mkdir -p ${GENERATED_CONF_DIR}
mkdir -p ${NGINX_CONF_ROOT}
mkdir -p ${RUNTIME_BIN_DIR}
mkdir -p ${NGINX_CACHE_DIR}
mkdir -p ${TEMP_DIR}
mkdir -p ${PERP_BASE}

export -f set_instance_name_from_dir
export -f set_instance_start_control_file_path
export -f set_instance_stop_control_file_path

ENVIRONMENT_SOURCED=1
