#! /usr/bin/env bash
# vim: set ft=shell

MY_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
if [ -z "${ENVIRONMENT_SOURCED}" ]; then
  source ${MY_DIR}/environment
fi

APP_DIR=${1}
STARTING_PORT=9000
NUM_INSTANCES=${2-${NUM_INSTANCES-1}}
INSTANCE_GROUP_NAME=`basename ${APP_DIR}`

# exit with a 100 if we have no start file, this is fatal as this is 
# how we start the application
if [ ! -f ${APP_DIR}/ar-start ]; then
  log "missing control file '${APP_DIR}/ar-start'"
  exit 100
fi

PORT=${STARTING_PORT}
for count in $(seq ${NUM_INSTANCES})
do
  PORT=`find_next_available_port ${PORT}`
  INSTANCE_NAME=${INSTANCE_GROUP_NAME}_${PORT}
  START_CMD="./ar-start ${PORT}"
  # create our perp control files, and directory structure
  mkdir -p ${PERP_BASE}/${INSTANCE_NAME}
  cat ${TEMPLATE_DIR}/perp.rc.main | \
    sed -e "s[{{start_cmd}}[${START_CMD}[g" |\
    sed -e "s[{{env_settings_file}}[${ENV_SETTINGS_FILE}[g" |\
    sed -e "s[{{approuter_bin_dir}}[${APPROUTER_BIN_DIR}[g" |\
    sed -e "s[{{change_to_dir}}[${APP_DIR}[g" \
    > ${PERP_BASE}/${INSTANCE_NAME}/rc.main
  # setup our log handlers, we've got a couple options available and here
  # we'll be chosing the right one.
  # default - tinylog 
  # options to use syslog, or have all the output go to a single file or
  # 'servicelog'
  if [ -n "${USE_SYSLOG}" ]; then
    cp ${TEMPLATE_DIR}/perp.rc.syslog ${PERP_BASE}/${INSTANCE_NAME}/rc.log
  elif [ -n "${USE_SERVICELOG}" ]; then
    cat ${TEMPLATE_DIR}/perp.rc.servicelog | \
      sed -e "s[{{log_dir}}[${LOG_DIR}[g"  > ${PERP_BASE}/${INSTANCE_NAME}/rc.log
  else
    cat ${TEMPLATE_DIR}/perp.rc.log | \
      sed -e "s[{{log_dir}}[${LOG_DIR}[g"  > ${PERP_BASE}/${INSTANCE_NAME}/rc.log
  fi
  chmod +x ${PERP_BASE}/${INSTANCE_NAME}/rc.*
  chmod +t ${PERP_BASE}/${INSTANCE_NAME}
  echo $PORT
done

