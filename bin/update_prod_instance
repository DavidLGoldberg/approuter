#! /usr/bin/env bash

MY_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
source ${MY_DIR}/environment

# our active and passive instances are all determined for us
# in the environment 'include'
# check for updates to passive instance
${MY_DIR}/update_repo_as_needed test_only ${PASSIVE_PROD_INSTANCE}
# if it has updates (update_repo_as_needed returns 100)
if [ $? == 100 ]; then
  #   stop the instance 
  ${PASSIVE_PROD_INSTANCE_STOP_CTL_FILE}
  #   update instance
  update_repo_as_needed ${PASSIVE_PROD_INSTANCE}
  #   start instance
  ${PASSIVE_PROD_INSTANCE_START_CTL_FILE}
  #   switch nginx config after which our passive references
  #   will be active and our active references will be passive
  switch_nginx_config
  #   ideally we'd wait for the old instance to drain....
  #   update the newly passive instance
  ${ACTIVE_PROD_INSTANCE_STOP_CTL_FILE}
  update_repo_as_needed ${ACTIVE_PROD_INSTANCE}
  if [ $? != 100 ]; then
    # check to see if our versions are mismatched
    echo "mismatched prod repo versions!"
  fi
  #   start newly passive instance
  ${ACTIVE_PROD_INSTANCE_START_CTL_FILE}
fi

# we're leaving both instances running at all times
# we can check that both prod instances are at the same version
# as (outside the switch window) they should both be up and
# at the same version
